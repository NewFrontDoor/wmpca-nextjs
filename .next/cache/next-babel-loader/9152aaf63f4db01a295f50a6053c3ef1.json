{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bratalix\\\\Documents\\\\ReactApps\\\\wmpca-nextjs\\\\components\\\\welcome.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled'; //import SectionTitle from './section-title';\n\nimport BlockContent from '@sanity/block-content-to-react';\nimport sanity from '../lib/sanity';\nconst ContentWrapper = styled.div`\n  span{\n    display: inline-block;\n  }\n`;\nconst serializers = {\n  types: {\n    code: props => __jsx(\"pre\", {\n      \"data-language\": props.node.language,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, __jsx(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, props.node.code))\n  }\n};\nexport default function Welcome({\n  welcome\n}) {\n  const {\n    0: data,\n    1: setData\n  } = useState(welcome);\n  const {\n    0: dataFetched,\n    1: setDataFetched\n  } = useState(Boolean(welcome));\n  const welcomeQuery = `\n    *[_type == \"main\"][0]{\n      welcome[]{\n        ...,\n        content[]{\n          ...,\n          asset->\n        }\n      }\n    }\n  `;\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await sanity.fetch(welcomeQuery);\n      setData(result[0]);\n      setDataFetched(true);\n    };\n\n    if (dataFetched === false) {\n      fetchData();\n    } else {\n      setData(welcome);\n    }\n  }, [dataFetched, welcome, welcomeQuery]);\n  return dataFetched === true ? __jsx(React.Fragment, null, __jsx(ContentWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(BlockContent, {\n    blocks: data,\n    serializers: serializers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))) : '';\n}","map":{"version":3,"sources":["C:/Users/Bratalix/Documents/ReactApps/wmpca-nextjs/components/welcome.js"],"names":["React","useState","useEffect","styled","BlockContent","sanity","ContentWrapper","div","serializers","types","code","props","node","language","Welcome","welcome","data","setData","dataFetched","setDataFetched","Boolean","welcomeQuery","fetchData","result","fetch"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,iBAAnB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,MAAMC,cAAc,GAAGH,MAAM,CAACI,GAAI;;;;CAAlC;AAMA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEC,KAAK,IACT;AAAK,uBAAeA,KAAK,CAACC,IAAN,CAAWC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,KAAK,CAACC,IAAN,CAAWF,IAAlB,CADF;AAFG;AADW,CAApB;AAUA,eAAe,SAASI,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAA4B;AACzC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBhB,QAAQ,CAACc,OAAD,CAAhC;AACA,QAAM;AAAA,OAACG,WAAD;AAAA,OAAcC;AAAd,MAAgClB,QAAQ,CAACmB,OAAO,CAACL,OAAD,CAAR,CAA9C;AAEA,QAAMM,YAAY,GAAI;;;;;;;;;;GAAtB;AAYAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,SAAS,GAAG,YAAY;AAC5B,YAAMC,MAAM,GAAG,MAAMlB,MAAM,CAACmB,KAAP,CAAaH,YAAb,CAArB;AACAJ,MAAAA,OAAO,CAACM,MAAM,CAAC,CAAD,CAAP,CAAP;AACAJ,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAJD;;AAMA,QAAID,WAAW,KAAK,KAApB,EAA2B;AACzBI,MAAAA,SAAS;AACV,KAFD,MAGI;AACFL,MAAAA,OAAO,CAACF,OAAD,CAAP;AACD;AACF,GAbQ,EAaN,CAACG,WAAD,EAAcH,OAAd,EAAuBM,YAAvB,CAbM,CAAT;AAeA,SAAOH,WAAW,KAAK,IAAhB,GACL,4BAEE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAc,IAAA,MAAM,EAAEF,IAAtB;AAA4B,IAAA,WAAW,EAAER,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFF,CADK,GAOF,EAPL;AAQD","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport styled from '@emotion/styled';\r\n//import SectionTitle from './section-title';\r\nimport BlockContent from '@sanity/block-content-to-react';\r\nimport sanity from '../lib/sanity';\r\n\r\nconst ContentWrapper = styled.div`\r\n  span{\r\n    display: inline-block;\r\n  }\r\n`;\r\n\r\nconst serializers = {\r\n  types: {\r\n    code: props => (\r\n      <pre data-language={props.node.language}>\r\n        <code>{props.node.code}</code>\r\n      </pre>\r\n    )\r\n  }\r\n}\r\n\r\nexport default function Welcome({welcome}) {\r\n  const [data, setData] = useState(welcome);\r\n  const [dataFetched, setDataFetched] = useState(Boolean(welcome));\r\n\r\n  const welcomeQuery = `\r\n    *[_type == \"main\"][0]{\r\n      welcome[]{\r\n        ...,\r\n        content[]{\r\n          ...,\r\n          asset->\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await sanity.fetch(welcomeQuery);\r\n      setData(result[0]);\r\n      setDataFetched(true);\r\n    };\r\n\r\n    if (dataFetched === false) {\r\n      fetchData();\r\n    }\r\n    else{\r\n      setData(welcome)\r\n    }\r\n  }, [dataFetched, welcome, welcomeQuery]);\r\n\r\n  return dataFetched === true ?  (\r\n    <>\r\n      {/*<SectionTitle text=\"Welcome\" />*/}\r\n      <ContentWrapper>\r\n          <BlockContent blocks={data} serializers={serializers} />\r\n      </ContentWrapper>\r\n    </>\r\n  ) : ('');\r\n}"]},"metadata":{},"sourceType":"module"}