{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bratalix\\\\Documents\\\\ReactApps\\\\wmpca-nextjs\\\\pages\\\\[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport Header from '../components/header';\nimport BlockContent from '@sanity/block-content-to-react';\nimport sanity from '../lib/sanity';\nimport Form from '../components/form';\nimport getVideoId from 'get-video-id';\nimport Vimeo from '@u-wave/react-vimeo'; //import Youtube from 'react-youtube';\n\nimport Youtube from '@u-wave/react-youtube';\nimport AudioPlayer from 'react-audio-player';\nimport MainImage from '../components/main-image';\nimport Layout from '../components/layout';\nimport SanityBlock from '../utils/sanity-block';\nconst Grid = styled.div`\n  display: grid;\n  gap: 20px;\n`;\nconst Wrapper = styled.article`\n  min-height: 550px;\n`;\nexport default function SanityPage({\n  mainData\n}) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(Header, {\n    heading: ['Page1'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), __jsx(SanityBlock, {\n    blocks: mainData[0].content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n}\nSanityPage.propTypes = {\n  mainData: PropTypes.array.isRequired\n};\n\nSanityPage.getInitialProps = async ({\n  query\n}) => {\n  const pageQuery = `\n      *[_type == \"page\" && slug.current match '${query.slug}']{\n        ...,\n          content[]{\n            ...,\n            _type == 'reference' => @-> {\n              ...,\n              blocks[] {\n                ...,\n                _type == 'reference' => @ ->\n              }\n            },\n            markDefs[] {\n              ...,\n              _type == 'internalLink' => {\n                  'slug': @.reference->slug.current\n              }\n            },\n          asset->\n          },\n          mainImage{\n            asset->\n          },\n          'id': _id,\n        'pathname': '/' + slug.current\n      }\n    `;\n  const results = await sanity.fetch(pageQuery);\n  console.log(results);\n  return {\n    mainData: results\n  };\n};","map":{"version":3,"sources":["C:/Users/Bratalix/Documents/ReactApps/wmpca-nextjs/pages/[slug].js"],"names":["Link","PropTypes","styled","Header","BlockContent","sanity","Form","getVideoId","Vimeo","Youtube","AudioPlayer","MainImage","Layout","SanityBlock","Grid","div","Wrapper","article","SanityPage","mainData","content","propTypes","array","isRequired","getInitialProps","query","pageQuery","slug","results","fetch","console","log"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,MAAMC,IAAI,GAAGZ,MAAM,CAACa,GAAI;;;CAAxB;AAKA,MAAMC,OAAO,GAAGd,MAAM,CAACe,OAAQ;;CAA/B;AAIA,eAAe,SAASC,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAAgC;AAC7C,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,CAAC,OAAD,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,QAAQ,CAAC,CAAD,CAAR,CAAYC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AASD;AAEDF,UAAU,CAACG,SAAX,GAAuB;AACnBF,EAAAA,QAAQ,EAAElB,SAAS,CAACqB,KAAV,CAAgBC;AADP,CAAvB;;AAIAL,UAAU,CAACM,eAAX,GAA6B,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAmB;AAC5C,QAAMC,SAAS,GAAI;iDAC0BD,KAAK,CAACE,IAAK;;;;;;;;;;;;;;;;;;;;;;;;;KADxD;AA4BA,QAAMC,OAAO,GAAG,MAAMvB,MAAM,CAACwB,KAAP,CAAaH,SAAb,CAAtB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,SAAO;AAACT,IAAAA,QAAQ,EAAES;AAAX,GAAP;AACD,CAhCH","sourcesContent":["import Link from 'next/link';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled';\r\nimport Header from '../components/header';\r\nimport BlockContent from '@sanity/block-content-to-react';\r\nimport sanity from '../lib/sanity';\r\nimport Form from '../components/form';\r\nimport getVideoId from 'get-video-id';\r\nimport Vimeo from '@u-wave/react-vimeo';\r\n//import Youtube from 'react-youtube';\r\nimport Youtube from '@u-wave/react-youtube';\r\nimport AudioPlayer from 'react-audio-player'\r\nimport MainImage from '../components/main-image';\r\nimport Layout from '../components/layout';\r\nimport SanityBlock from '../utils/sanity-block';\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  gap: 20px;\r\n`;\r\n\r\nconst Wrapper = styled.article`\r\n  min-height: 550px;\r\n`;\r\n\r\nexport default function SanityPage({mainData}) {\r\n  return  (\r\n    <Layout>\r\n      <Grid>\r\n        <Header heading={['Page1']} />\r\n        <SanityBlock blocks={mainData[0].content} />\r\n      </Grid>\r\n    </Layout>\r\n      \r\n  ) ;\r\n}\r\n\r\nSanityPage.propTypes = {\r\n    mainData: PropTypes.array.isRequired \r\n};\r\n\r\nSanityPage.getInitialProps = async ({query}) => {\r\n    const pageQuery = `\r\n      *[_type == \"page\" && slug.current match '${query.slug}']{\r\n        ...,\r\n          content[]{\r\n            ...,\r\n            _type == 'reference' => @-> {\r\n              ...,\r\n              blocks[] {\r\n                ...,\r\n                _type == 'reference' => @ ->\r\n              }\r\n            },\r\n            markDefs[] {\r\n              ...,\r\n              _type == 'internalLink' => {\r\n                  'slug': @.reference->slug.current\r\n              }\r\n            },\r\n          asset->\r\n          },\r\n          mainImage{\r\n            asset->\r\n          },\r\n          'id': _id,\r\n        'pathname': '/' + slug.current\r\n      }\r\n    `;\r\n    \r\n    const results = await sanity.fetch(pageQuery);\r\n    console.log(results)\r\n    return {mainData: results};\r\n  };"]},"metadata":{},"sourceType":"module"}