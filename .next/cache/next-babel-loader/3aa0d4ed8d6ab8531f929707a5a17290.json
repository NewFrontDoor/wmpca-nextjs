{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled'; //import SectionTitle from './section-title';\n\nimport BlockContent from '@sanity/block-content-to-react';\nimport sanity from '../lib/sanity';\nconst ContentWrapper = styled.div`\n  span{\n    display: inline-block;\n  }\n`;\nconst serializers = {\n  types: {\n    code: props => __jsx(\"pre\", {\n      \"data-language\": props.node.language\n    }, __jsx(\"code\", null, props.node.code))\n  }\n};\nexport default function Welcome({\n  welcome\n}) {\n  const {\n    0: data,\n    1: setData\n  } = useState(welcome);\n  const {\n    0: dataFetched,\n    1: setDataFetched\n  } = useState(Boolean(welcome));\n  const welcomeQuery = `\n    *[_type == \"main\"][0]{\n      welcome[]{\n        ...,\n        content[]{\n          ...,\n          asset->\n        }\n      }\n    }\n  `;\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await sanity.fetch(welcomeQuery);\n      setData(result[0]);\n      setDataFetched(true);\n    };\n\n    if (dataFetched === false) {\n      fetchData();\n    } else {\n      setData(welcome);\n    }\n  }, [dataFetched, welcome, welcomeQuery]);\n  return dataFetched === true ? __jsx(React.Fragment, null, __jsx(ContentWrapper, null, __jsx(BlockContent, {\n    blocks: data,\n    serializers: serializers\n  }))) : '';\n}","map":null,"metadata":{},"sourceType":"module"}